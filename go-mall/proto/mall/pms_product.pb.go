// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: model/pms_product.proto

package mall

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Id                uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 主键
	ProductCategoryId uint64  `protobuf:"varint,2,opt,name=productCategoryId,proto3" json:"productCategoryId,omitempty"` // 商品分类id
	Name              string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                            // 商品名称
	SubTitle          string  `protobuf:"bytes,4,opt,name=subTitle,proto3" json:"subTitle,omitempty"`                    // 副标题
	BrandId           uint64  `protobuf:"varint,5,opt,name=brandId,proto3" json:"brandId,omitempty"`                     // 品牌id
	Description       string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`              // 商品描述
	ProductSN         string  `protobuf:"bytes,7,opt,name=productSN,proto3" json:"productSN,omitempty"`                  // 货号
	Price             float64 `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`                        // 价格
	OriginalPrice     float64 `protobuf:"fixed64,9,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`        // 市场价
	Stock             uint32  `protobuf:"varint,10,opt,name=stock,proto3" json:"stock,omitempty"`                        // 库存
	Unit              string  `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`                           // 单位
	Weight            float64 `protobuf:"fixed64,12,opt,name=weight,proto3" json:"weight,omitempty"`                     // 商品重量，默认为克
	Sort              uint32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`                          // 排序
	// 促销信息
	GiftPoint          uint32  `protobuf:"varint,14,opt,name=giftPoint,proto3" json:"giftPoint,omitempty"`                   // 赠送的积分
	GiftGrowth         uint32  `protobuf:"varint,15,opt,name=giftGrowth,proto3" json:"giftGrowth,omitempty"`                 // 赠送的成长值
	UsePointLimit      uint32  `protobuf:"varint,16,opt,name=usePointLimit,proto3" json:"usePointLimit,omitempty"`           // 限制使用的积分数
	PreviewStatus      uint32  `protobuf:"varint,17,opt,name=previewStatus,proto3" json:"previewStatus,omitempty"`           // 是否为预告商品：0->不是；1->是
	PublishStatus      uint32  `protobuf:"varint,18,opt,name=publishStatus,proto3" json:"publishStatus,omitempty"`           // 上架状态：0->下架；1->上架
	NewStatus          uint32  `protobuf:"varint,19,opt,name=newStatus,proto3" json:"newStatus,omitempty"`                   // 新品状态:0->不是新品；1->新品
	RecommandStatus    uint32  `protobuf:"varint,20,opt,name=recommandStatus,proto3" json:"recommandStatus,omitempty"`       // 推荐状态；0->不推荐；1->推荐
	ServiceIds         string  `protobuf:"bytes,21,opt,name=serviceIds,proto3" json:"serviceIds,omitempty"`                  // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	DetailTitle        string  `protobuf:"bytes,22,opt,name=detailTitle,proto3" json:"detailTitle,omitempty"`                // 详情标题
	DetailDesc         string  `protobuf:"bytes,23,opt,name=detailDesc,proto3" json:"detailDesc,omitempty"`                  // 详情描述
	Keywords           string  `protobuf:"bytes,24,opt,name=keywords,proto3" json:"keywords,omitempty"`                      // 关键字
	Note               string  `protobuf:"bytes,25,opt,name=note,proto3" json:"note,omitempty"`                              // 备注
	PromotionType      uint32  `protobuf:"varint,26,opt,name=promotionType,proto3" json:"promotionType,omitempty"`           // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	PromotionPrice     float64 `protobuf:"fixed64,27,opt,name=promotionPrice,proto3" json:"promotionPrice,omitempty"`        // 促销价格
	PromotionStartTime uint32  `protobuf:"varint,28,opt,name=promotionStartTime,proto3" json:"promotionStartTime,omitempty"` // 促销开始时间
	PromotionEndTime   uint32  `protobuf:"varint,29,opt,name=promotionEndTime,proto3" json:"promotionEndTime,omitempty"`     // 促销结束时间
	// 属性信息
	ProductAttributeCategoryId uint64 `protobuf:"varint,30,opt,name=productAttributeCategoryId,proto3" json:"productAttributeCategoryId,omitempty"` // 品牌属性分类id
	Pic                        string `protobuf:"bytes,31,opt,name=pic,proto3" json:"pic,omitempty"`                                                // 图片
	AlbumPics                  string `protobuf:"bytes,32,opt,name=albumPics,proto3" json:"albumPics,omitempty"`                                    // 画册图片，连产品图片限制为5张，以逗号分割
	DetailHTML                 string `protobuf:"bytes,33,opt,name=detailHTML,proto3" json:"detailHTML,omitempty"`                                  // 电脑端详情
	DetailMobileHTML           string `protobuf:"bytes,34,opt,name=detailMobileHTML,proto3" json:"detailMobileHTML,omitempty"`                      // 移动端详情
	// 状态
	VerifyStatus int32 `protobuf:"varint,35,opt,name=verifyStatus,proto3" json:"verifyStatus,omitempty"` // 审核状态：0->未审核；1->审核通过
	DeleteStatus int32 `protobuf:"varint,36,opt,name=deleteStatus,proto3" json:"deleteStatus,omitempty"` // 删除状态：0->未删除；1->已删除
	// 其他
	FeightTemplateId  uint64 `protobuf:"varint,37,opt,name=feightTemplateId,proto3" json:"feightTemplateId,omitempty"`   // 运费模版id
	Sale              uint32 `protobuf:"varint,38,opt,name=sale,proto3" json:"sale,omitempty"`                           // 销量
	LowStock          uint32 `protobuf:"varint,39,opt,name=lowStock,proto3" json:"lowStock,omitempty"`                   // 库存预警值
	PromotionPerLimit uint32 `protobuf:"varint,40,opt,name=promotionPerLimit,proto3" json:"promotionPerLimit,omitempty"` // 活动限购数量
	// 冗余字段
	BrandName           string `protobuf:"bytes,41,opt,name=brandName,proto3" json:"brandName,omitempty"`                     // 品牌名称
	ProductCategoryName string `protobuf:"bytes,42,opt,name=productCategoryName,proto3" json:"productCategoryName,omitempty"` // 商品分类名称
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_pms_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_model_pms_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_model_pms_product_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetProductCategoryId() uint64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Product) GetBrandId() uint64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetProductSN() string {
	if x != nil {
		return x.ProductSN
	}
	return ""
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *Product) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Product) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Product) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Product) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Product) GetGiftPoint() uint32 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *Product) GetGiftGrowth() uint32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *Product) GetUsePointLimit() uint32 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *Product) GetPreviewStatus() uint32 {
	if x != nil {
		return x.PreviewStatus
	}
	return 0
}

func (x *Product) GetPublishStatus() uint32 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *Product) GetNewStatus() uint32 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *Product) GetRecommandStatus() uint32 {
	if x != nil {
		return x.RecommandStatus
	}
	return 0
}

func (x *Product) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *Product) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *Product) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *Product) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *Product) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Product) GetPromotionType() uint32 {
	if x != nil {
		return x.PromotionType
	}
	return 0
}

func (x *Product) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *Product) GetPromotionStartTime() uint32 {
	if x != nil {
		return x.PromotionStartTime
	}
	return 0
}

func (x *Product) GetPromotionEndTime() uint32 {
	if x != nil {
		return x.PromotionEndTime
	}
	return 0
}

func (x *Product) GetProductAttributeCategoryId() uint64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *Product) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Product) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *Product) GetDetailHTML() string {
	if x != nil {
		return x.DetailHTML
	}
	return ""
}

func (x *Product) GetDetailMobileHTML() string {
	if x != nil {
		return x.DetailMobileHTML
	}
	return ""
}

func (x *Product) GetVerifyStatus() int32 {
	if x != nil {
		return x.VerifyStatus
	}
	return 0
}

func (x *Product) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *Product) GetFeightTemplateId() uint64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *Product) GetSale() uint32 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *Product) GetLowStock() uint32 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *Product) GetPromotionPerLimit() uint32 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *Product) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *Product) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

var File_model_pms_product_proto protoreflect.FileDescriptor

var file_model_pms_product_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x22, 0xf5, 0x0a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x4e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x63, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x54, 0x4d, 0x4c, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x54, 0x4d, 0x4c, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x54, 0x4d, 0x4c, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x48, 0x54, 0x4d, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x6d, 0x61,
	0x6c, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_pms_product_proto_rawDescOnce sync.Once
	file_model_pms_product_proto_rawDescData = file_model_pms_product_proto_rawDesc
)

func file_model_pms_product_proto_rawDescGZIP() []byte {
	file_model_pms_product_proto_rawDescOnce.Do(func() {
		file_model_pms_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_pms_product_proto_rawDescData)
	})
	return file_model_pms_product_proto_rawDescData
}

var file_model_pms_product_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_model_pms_product_proto_goTypes = []interface{}{
	(*Product)(nil), // 0: model.Product
}
var file_model_pms_product_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_model_pms_product_proto_init() }
func file_model_pms_product_proto_init() {
	if File_model_pms_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_pms_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_pms_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_pms_product_proto_goTypes,
		DependencyIndexes: file_model_pms_product_proto_depIdxs,
		MessageInfos:      file_model_pms_product_proto_msgTypes,
	}.Build()
	File_model_pms_product_proto = out.File
	file_model_pms_product_proto_rawDesc = nil
	file_model_pms_product_proto_goTypes = nil
	file_model_pms_product_proto_depIdxs = nil
}
